From bf0e8ec9bec02abfe45b3e9119fb5bcf64b6dc87 Mon Sep 17 00:00:00 2001
From: julmajustus <julmajustus@tutanota.com>
Date: Thu, 29 May 2025 14:07:51 +0300
Subject: [PATCH] ported simple_scratchpad from dwl

---
 config.def.h |  3 ++
 dwm.c        | 80 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 83 insertions(+)

diff --git a/config.def.h b/config.def.h
index 9efa774..8cd426c 100644
--- a/config.def.h
+++ b/config.def.h
@@ -85,6 +85,9 @@ static const Key keys[] = {
 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
 	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_z,      addscratchpad,     {0} },
+	{ MODKEY|ControlMask,           XK_z,      togglescratchpad,  {0} },
+	{ MODKEY,                       XK_z,      removescratchpad,  {0} },
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
diff --git a/dwm.c b/dwm.c
index f1d86b2..73acd69 100644
--- a/dwm.c
+++ b/dwm.c
@@ -97,6 +97,8 @@ struct Client {
 	Client *snext;
 	Monitor *mon;
 	Window win;
+	int isscratchpad;
+	Client *spnext;
 };
 
 typedef struct {
@@ -142,6 +144,7 @@ typedef struct {
 } Rule;
 
 /* function declarations */
+static void addscratchpad(const Arg *arg);
 static void applyrules(Client *c);
 static int applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact);
 static void arrange(Monitor *m);
@@ -189,6 +192,7 @@ static void pop(Client *c);
 static void propertynotify(XEvent *e);
 static void quit(const Arg *arg);
 static Monitor *recttomon(int x, int y, int w, int h);
+static void removescratchpad(const Arg *arg);
 static void resize(Client *c, int x, int y, int w, int h, int interact);
 static void resizeclient(Client *c, int x, int y, int w, int h);
 static void resizemouse(const Arg *arg);
@@ -212,6 +216,7 @@ static void tile(Monitor *m);
 static void togglebar(const Arg *arg);
 static void togglefloating(const Arg *arg);
 static void toggletag(const Arg *arg);
+static void togglescratchpad(const Arg *arg);
 static void toggleview(const Arg *arg);
 static void unfocus(Client *c, int setfocus);
 static void unmanage(Client *c, int destroyed);
@@ -268,6 +273,8 @@ static Drw *drw;
 static Monitor *mons, *selmon;
 static Window root, wmcheckwin;
 
+static Client *scratchpadclients = NULL;
+static int scratchpadvisible = 1;
 /* configuration, allows nested code to access above variables */
 #include "config.h"
 
@@ -275,6 +282,29 @@ static Window root, wmcheckwin;
 struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };
 
 /* function implementations */
+
+
+
+
+void
+addscratchpad(const Arg *arg)
+{
+	Client *c = selmon->sel, *p;
+	if (!c)
+		return;
+
+	for (p = scratchpadclients; p; p = p->spnext)
+		if (p == c)
+			return;
+
+	if (!c->isfloating)
+		togglefloating(NULL);
+
+	c->isscratchpad = 1;
+	c->spnext = scratchpadclients;
+	scratchpadclients = c;
+}
+
 void
 applyrules(Client *c)
 {
@@ -1076,6 +1106,8 @@ manage(Window w, XWindowAttributes *wa)
 		XRaiseWindow(dpy, c->win);
 	attach(c);
 	attachstack(c);
+	c->isscratchpad = 0;
+	c->spnext = NULL;
 	XChangeProperty(dpy, root, netatom[NetClientList], XA_WINDOW, 32, PropModeAppend,
 		(unsigned char *) &(c->win), 1);
 	XMoveResizeWindow(dpy, c->win, c->x + 2 * sw, c->y, c->w, c->h); /* some windows require this */
@@ -1275,6 +1307,25 @@ recttomon(int x, int y, int w, int h)
 	return r;
 }
 
+void
+
+
+removescratchpad(const Arg *arg)
+{
+	Client *c = selmon->sel, **pp;
+
+	if (!c || !c->isscratchpad)
+		return;
+
+	for (pp = &scratchpadclients; *pp && *pp != c; pp = &(*pp)->spnext);
+
+	if (*pp)
+		*pp = (*pp)->spnext;
+
+	c->isscratchpad = 0;
+	c->spnext = NULL;
+}
+
 void
 resize(Client *c, int x, int y, int w, int h, int interact)
 {
@@ -1762,6 +1813,27 @@ toggleview(const Arg *arg)
 	}
 }
 
+void
+togglescratchpad(const Arg *arg)
+{
+	Client *c;
+
+	if (!scratchpadclients)
+		return;
+
+	scratchpadvisible = !scratchpadvisible;
+
+	for (c = scratchpadclients; c; c = c->spnext) {
+		if (scratchpadvisible) {
+			c->tags = selmon->tagset[selmon->seltags];
+			XRaiseWindow(dpy, c->win);
+		} else
+			c->tags = 0;
+	}
+	arrange(selmon);
+	focus(scratchpadvisible ? c : NULL);
+}
+
 void
 unfocus(Client *c, int setfocus)
 {
@@ -1778,6 +1850,7 @@ unfocus(Client *c, int setfocus)
 void
 unmanage(Client *c, int destroyed)
 {
+	Client **pp;
 	Monitor *m = c->mon;
 	XWindowChanges wc;
 
@@ -1795,6 +1868,13 @@ unmanage(Client *c, int destroyed)
 		XSetErrorHandler(xerror);
 		XUngrabServer(dpy);
 	}
+
+	if (c->isscratchpad) {
+		pp = &scratchpadclients;
+		for (; *pp && *pp != c; pp = &(*pp)->spnext);
+		if (*pp) *pp = (*pp)->spnext;
+	}
+
 	free(c);
 	focus(NULL);
 	updateclientlist();
-- 
2.49.0

